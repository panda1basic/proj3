version: '3.8'

networks:
  project-net:
    driver: bridge
volumes:
  postgres_data:
  redmine_data:
  gitlab_data:
  mongo_data:
  grafana_data:
  prometheus_data:

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: redmine_prod
      POSTGRES_USER: redmine
      POSTGRES_PASSWORD: redpgpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - project-net

  redmine:
    image: redmine:5.1.2
    container_name: redmine
    depends_on:
      - postgres
    restart: always
    ports:
      - "8080:3000"
    environment:
      REDMINE_DB_POSTGRES: postgres
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redpgpass
      REDMINE_DB_DATABASE: redmine_prod
      REDMINE_SECRET_KEY_BASE: generate_with_rake_secret
    volumes:
      - redmine_data:/usr/src/redmine/files
    networks:
      - project-net

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    volumes:
      - ./mongo_data:/data/db
    networks:
      - project-net

  rocketchat:
    image: rocketchat/rocket.chat:latest
    container_name: rocketchat
    depends_on:
      - mongo
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - ./rocketchat_data:/app/uploads
    networks:
      - project-net

  gitlab_loc:
    image: gitlab/gitlab-ce:17.9.2-ce.0
    container_name: gitlab_loc
    restart: always
    ports:
      - "80:80"
      - "2022:22"
      - "9093:9093"
    volumes:
      - gitlab_data/data:/var/opt/gitlab
      - gitlab_data/logs:/var/log/gitlab
      - gitlab_data/config:/etc/gitlab
    environment:
      GITLAB_ROOT_PASSWORD: superpass
      OVERWRITE_SETTING_Accounts_RequireEmailVerification: "false"
      OVERWRITE_SETTING_Accounts_SendEmailOnRegistration: "false"
      OVERWRITE_SETTING_Notifications_Email: "false"
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab_loc'
        prometheus['enable'] = true
        gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    networks:
      - project-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3090:3000"
    restart: always
    networks:
      - project-net

  webapp:
    build: app/.
    container_name: webapp
    ports:
      - "5000:5000"
    restart: always
    networks:
      - project-net
